{"ast":null,"code":"var _jsxFileName = \"/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CalculateBtn = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const finalPrice = (cost, business) => {\n    cost = Number(cost);\n    const markup = {\n      CMRod: 2.5,\n      HVNRod: 2.5,\n      HVNBon: 2.3,\n      RPRod: 2.3\n    };\n\n    switch (business) {\n      case 'HVN':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pre\\xE7o de custo: R$\", cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pre\\xE7o de venda Rodovi\\xE1ria: R$\", cost * markup.HVNRod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pre\\xE7o de venda Bonsucesso: R$\", cost * markup.HVNBon]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n\n      case 'CM':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pre\\xE7o de custo: R$\", cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pre\\xE7o de venda Rodovi\\xE1ria: R$\", cost * markup.CMRod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true);\n\n      case 'RP':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pre\\xE7o de custo: R$\", cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pre\\xE7o de venda Rodovi\\xE1ria: R$\", cost * markup.RPRod]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true);\n    }\n  };\n\n  const checkValue = num => {\n    if (num == 0) {\n      return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(num)) {\n      return alert('Erro: o valor precisa ser um número');\n    } else {\n      finalPrice(num, 'HVN');\n      console.log(num);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Custo\",\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"Calcular\",\n      onClick: () => checkValue(inputValue),\n      children: \"Calcular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CalculateBtn, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n\n_c = CalculateBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateBtn\");","map":{"version":3,"sources":["/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx"],"names":["useState","CalculateBtn","inputValue","setInputValue","finalPrice","cost","business","Number","markup","CMRod","HVNRod","HVNBon","RPRod","checkValue","num","alert","isNaN","console","log","e","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMI,UAAU,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACrCD,IAAAA,IAAI,GAAGE,MAAM,CAACF,IAAD,CAAb;AAEA,UAAMG,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAE,GADM;AAEbC,MAAAA,MAAM,EAAE,GAFK;AAGbC,MAAAA,MAAM,EAAE,GAHK;AAIbC,MAAAA,KAAK,EAAE;AAJM,KAAf;;AAQA,YAAQN,QAAR;AACE,WAAK,KAAL;AACE,4BACE;AAAA,kCACE;AAAA,gDACqBD,IADrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,8DACgCA,IAAI,GAAGG,MAAM,CAACE,MAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAA,2DACgCL,IAAI,GAAGG,MAAM,CAACG,MAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,wBADF;;AAaF,WAAK,IAAL;AACE,4BACE;AAAA,kCACA;AAAA,gDACqBN,IADrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA;AAAA,8DACgCA,IAAI,GAAGG,MAAM,CAACC,KAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA,wBADF;;AAUF,WAAK,IAAL;AACE,4BACE;AAAA,kCACA;AAAA,gDACqBJ,IADrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA;AAAA,8DACgCA,IAAI,GAAGG,MAAM,CAACI,KAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA,wBADF;AA3BJ;AAsCD,GAjDD;;AAmDA,QAAMC,UAAU,GAAIC,GAAD,IAAS;AAE1B,QAAIA,GAAG,IAAI,CAAX,EACA;AACA,aAAOC,KAAK,CAAC,gDAAD,CAAZ;AACC,KAHD,MAGO,IAAIC,KAAK,CAACF,GAAD,CAAT,EACP;AACA,aAAOC,KAAK,CAAC,qCAAD,CAAZ;AACC,KAHM,MAIP;AACAX,MAAAA,UAAU,CAACU,GAAD,EAAM,KAAN,CAAV;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACC;AACF,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,WAAW,EAAC,OAAjC;AAAyC,MAAA,QAAQ,EAAEK,CAAC,IAAIhB,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAArE;AAAA;AAAA;AAAA;AAAA,YADF,eAEA,qCAFA,eAIE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAE,MAAMR,UAAU,CAACX,UAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CA7EM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import {useState} from \"react\";\n\nexport const CalculateBtn = () => {\n  const [inputValue, setInputValue] = useState(\"\")\n\n  const finalPrice = (cost, business) => {\n    cost = Number(cost)\n\n    const markup = {\n      CMRod: 2.5,\n      HVNRod: 2.5,\n      HVNBon: 2.3,\n      RPRod: 2.3\n    }\n    \n  \n    switch (business) {\n      case 'HVN':\n        return (\n          <>\n            <p>\n              Preço de custo: R${cost}\n            </p>\n            <p>\n              Preço de venda Rodoviária: R${cost * markup.HVNRod}\n            </p>\n            <p>\n              Preço de venda Bonsucesso: R${cost * markup.HVNBon}\n            </p>\n          </>\n        )\n      case 'CM':\n        return (\n          <>\n          <p>\n            Preço de custo: R${cost}\n          </p>\n          <p>\n            Preço de venda Rodoviária: R${cost * markup.CMRod}\n          </p>\n        </>\n        )\n      case 'RP':\n        return (\n          <>\n          <p>\n            Preço de custo: R${cost}\n          </p>\n          <p>\n            Preço de venda Rodoviária: R${cost * markup.RPRod}\n          </p>\n        </>\n        )\n    }\n  }\n  \n  const checkValue = (num) => {\n\n    if (num == 0) \n    {\n    return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(num )) \n    {\n    return alert('Erro: o valor precisa ser um número');\n    } else\n    {\n    finalPrice(num, 'HVN')\n    console.log(num)\n    }\n  }\n\n  return (\n    <>\n      <input type=\"number\" placeholder=\"Custo\" onChange={e => setInputValue(e.target.value)}/>\n    <>    \n    </>\n      <button value=\"Calcular\" onClick={() => checkValue(inputValue)}>Calcular</button> \n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}