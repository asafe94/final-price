{"ast":null,"code":"var _jsxFileName = \"/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CalculateBtn = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const finalPrice = (cost, business) => {\n    cost = Number(cost);\n    const markup = {\n      CMRod: 2.5,\n      HVNRod: 2.5,\n      HVNBon: 2.3,\n      RPRod: 2.3\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: () => {\n        switch (business) {\n          case 'HVN':\n            return console.log('meu pau é grande') //  <>\n            //    <p>Preço de custo: R${cost}</p>\n            //    <p>Preço de venda Rodoviária: R${cost * markup.HVNRod}</p>\n            //    <p>Preço de venda Bonsucesso: R${cost * markup.HVNBon}</p>\n            //  </>\n            ;\n            break;\n\n          case 'CM':\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Pre\\xE7o de custo: R$\", cost]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Pre\\xE7o de venda Rodovi\\xE1ria: R$\", cost * markup.CMRod]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true);\n\n          case 'RP':\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Pre\\xE7o de custo: R$\", cost]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Pre\\xE7o de venda Rodovi\\xE1ria: R$\", cost * markup.RPRod]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  };\n\n  const checkValue = num => {\n    if (num == 0) {\n      return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(num)) {\n      return alert('Erro: o valor precisa ser um número');\n    } else {\n      finalPrice(num, 'HVN');\n      console.log(num);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Custo\",\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"Calcular\",\n      onClick: () => checkValue(inputValue),\n      children: \"Calcular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CalculateBtn, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n\n_c = CalculateBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateBtn\");","map":{"version":3,"sources":["/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx"],"names":["useState","CalculateBtn","inputValue","setInputValue","finalPrice","cost","business","Number","markup","CMRod","HVNRod","HVNBon","RPRod","console","log","checkValue","num","alert","isNaN","e","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMI,UAAU,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACrCD,IAAAA,IAAI,GAAGE,MAAM,CAACF,IAAD,CAAb;AAEA,UAAMG,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAE,GADM;AAEbC,MAAAA,MAAM,EAAE,GAFK;AAGbC,MAAAA,MAAM,EAAE,GAHK;AAIbC,MAAAA,KAAK,EAAE;AAJM,KAAf;AAOA,wBACE;AAAA,gBACE,MAAM;AAGN,gBAAQN,QAAR;AACE,eAAK,KAAL;AACE,mBACEO,OAAO,CAACC,GAAR,CAAY,kBAAZ,CADF,CAEA;AACA;AACA;AACA;AACA;AANA;AAQA;;AACF,eAAK,IAAL;AACE,gCACE;AAAA,sCACE;AAAA,oDAAsBT,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,kEAAiCA,IAAI,GAAGG,MAAM,CAACC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,4BADF;;AAOF,eAAK,IAAL;AACE,gCACE;AAAA,sCACE;AAAA,oDAAsBJ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,kEAAiCA,IAAI,GAAGG,MAAM,CAACI,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,4BADF;AApBJ;AA6BD;AAjCD;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD,GA/CD;;AAiDA,QAAMG,UAAU,GAAIC,GAAD,IAAS;AAE1B,QAAIA,GAAG,IAAI,CAAX,EACA;AACA,aAAOC,KAAK,CAAC,gDAAD,CAAZ;AACC,KAHD,MAGO,IAAIC,KAAK,CAACF,GAAD,CAAT,EACP;AACA,aAAOC,KAAK,CAAC,qCAAD,CAAZ;AACC,KAHM,MAIP;AACAb,MAAAA,UAAU,CAACY,GAAD,EAAM,KAAN,CAAV;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACC;AACF,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,QAAQ,EAAEG,CAAC,IAAIhB,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAvD;AAAA;AAAA;AAAA;AAAA,YADF,eAEA,qCAFA,eAIE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAE,MAAMN,UAAU,CAACb,UAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CA3EM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import {useState} from \"react\";\n\nexport const CalculateBtn = () => {\n  const [inputValue, setInputValue] = useState(\"\")\n\n  const finalPrice = (cost, business) => {\n    cost = Number(cost)\n\n    const markup = {\n      CMRod: 2.5,\n      HVNRod: 2.5,\n      HVNBon: 2.3,\n      RPRod: 2.3\n    }\n    \n    return (\n      <div>\n      {(() => {\n\n\n        switch (business) {\n          case 'HVN':\n            return (\n              console.log('meu pau é grande')\n            //  <>\n            //    <p>Preço de custo: R${cost}</p>\n            //    <p>Preço de venda Rodoviária: R${cost * markup.HVNRod}</p>\n            //    <p>Preço de venda Bonsucesso: R${cost * markup.HVNBon}</p>\n            //  </>\n            )\n            break;\n          case 'CM':\n            return (\n              <>\n                <p>Preço de custo: R${cost}</p>\n                <p>Preço de venda Rodoviária: R${cost * markup.CMRod}</p>\n              </>\n            )\n            \n          case 'RP':\n            return (\n              <>\n                <p>Preço de custo: R${cost}</p>\n                <p>Preço de venda Rodoviária: R${cost * markup.RPRod}</p>\n              </>\n            )\n        \n        \n        }\n      })}\n      </div>\n    )\n  }\n  \n  const checkValue = (num) => {\n\n    if (num == 0) \n    {\n    return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(num)) \n    {\n    return alert('Erro: o valor precisa ser um número');\n    } else\n    {\n    finalPrice(num, 'HVN')\n    console.log(num)\n    }\n  }\n\n  return (\n    <>\n      <input placeholder=\"Custo\" onChange={e => setInputValue(e.target.value)}/>\n    <>    \n    </>\n      <button value=\"Calcular\" onClick={() => checkValue(inputValue)}>Calcular</button> \n    </>\n  )\n};"]},"metadata":{},"sourceType":"module"}