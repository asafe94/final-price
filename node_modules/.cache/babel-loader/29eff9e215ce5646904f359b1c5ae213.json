{"ast":null,"code":"var _jsxFileName = \"/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx\",\n    _s2 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CalculateBtn = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const checkValue = () => {\n    if (inputValue == 0) {\n      return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(inputValue)) {\n      return alert('Erro: o valor precisa ser um número');\n    } else if (typeof inputValue === 'number') {\n      return alert('sucesso');\n    } else {\n      alert('Erro inesperado.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Insira o custo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputValue,\n        onChange: _s(() => {\n          _s();\n\n          return this.const[(inputValue, setInputValue)] = useState(\"\")(inputValue);\n        }, \"zh+HvXX3zxuqMkvNfneES9FE1vU=\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"Calcular\",\n      onClick: () => checkValue(),\n      children: \"Calcular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(CalculateBtn, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n\n_c = CalculateBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateBtn\");","map":{"version":3,"sources":["/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx"],"names":["useState","CalculateBtn","inputValue","setInputValue","checkValue","alert","isNaN","const"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;;AAKA,QAAMI,UAAU,GAAG,MAAM;AAEvB,QAAIF,UAAU,IAAI,CAAlB,EACA;AACA,aAAOG,KAAK,CAAC,gDAAD,CAAZ;AACC,KAHD,MAGO,IAAIC,KAAK,CAACJ,UAAD,CAAT,EACP;AACA,aAAOG,KAAK,CAAC,qCAAD,CAAZ;AACC,KAHM,MAGA,IAAI,OAAQH,UAAR,KAAyB,QAA7B,EACP;AACA,aAAOG,KAAK,CAAC,SAAD,CAAZ;AACC,KAHM,MAIP;AACAA,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACC;AACF,GAfD;;AAiBA,sBACE;AAAA,4BACE;AAAA,iDACA;AAAO,QAAA,KAAK,EAAEH,UAAd;AAA0B,QAAA,QAAQ,KAAE;AAAA;;AAAA,iBAAM,KAAOK,KAAP,EAAcL,UAAU,EAAEC,aAA1B,KAA2CH,QAAQ,CAAC,EAAD,CAAR,CAC1FE,UAD0F,CAAjD;AAAA,SAAF;AAAlC;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAMA,qCANA,eAQE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAE,MAAME,UAAU,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD,CAnCM;;IAAMH,Y;;KAAAA,Y","sourcesContent":["import { useState } from \"react\";\n\nexport const CalculateBtn = () => {\n  const [inputValue, setInputValue] = useState(\"\")\n  \n\n\n\n  const checkValue = () => {\n\n    if (inputValue == 0) \n    {\n    return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(inputValue)) \n    {\n    return alert('Erro: o valor precisa ser um número');\n    } else if (typeof (inputValue) === ('number'))\n    {\n    return alert('sucesso');\n    } else \n    {\n    alert('Erro inesperado.');\n    }\n  }\n\n  return (\n    <>\n      <label>Insira o custo:\n      <input value={inputValue} onChange={() => this.  const [inputValue, setInputValue] = useState(\"\")\n(inputValue)}>\n      </input>\n      </label>\n    <>    \n    </>\n      <button value=\"Calcular\" onClick={() => checkValue()}>Calcular</button> \n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}