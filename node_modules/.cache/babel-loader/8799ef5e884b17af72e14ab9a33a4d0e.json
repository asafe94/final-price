{"ast":null,"code":"var _jsxFileName = \"/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CalculateBtn = () => {\n  const clicked = () => {\n    console.log('The button was ${clicked} ');\n  };\n\n  const checkValue = value => {\n    if (value == 0) {\n      return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(value)) {\n      return alert('Erro: o valor precisa ser um número');\n    } else if (typeof value === 'number') {\n      return alert('sucesso');\n    } else {\n      alert('Erro inesperado.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"Calcular\",\n      onClick: e => alert(this.value),\n      children: \"Calcular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Insira o custo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = CalculateBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateBtn\");","map":{"version":3,"sources":["/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx"],"names":["CalculateBtn","clicked","console","log","checkValue","value","alert","isNaN","e","cost"],"mappings":";;;AAAA,OAAO,MAAMA,YAAY,GAAG,MAAM;AAChC,QAAMC,OAAO,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAE5B,QAAIA,KAAK,IAAI,CAAb,EACA;AACA,aAAOC,KAAK,CAAC,gDAAD,CAAZ;AACC,KAHD,MAGO,IAAIC,KAAK,CAACF,KAAD,CAAT,EACP;AACA,aAAOC,KAAK,CAAC,qCAAD,CAAZ;AACC,KAHM,MAGA,IAAI,OAAQD,KAAR,KAAoB,QAAxB,EACP;AACA,aAAOC,KAAK,CAAC,SAAD,CAAZ;AACC,KAHM,MAIP;AACAA,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACC;AACF,GAfD;;AAiBA,sBACE;AAAA,4BACE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAGE,CAAD,IAAOF,KAAK,CAAC,KAAKD,KAAN,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEA,qCAFA,eAIE;AAAA,6BACE;AAAA,mDACA;AAAO,UAAA,IAAI,EAAG,MAAd;AAAqB,UAAA,KAAK,EAAII;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAaD,CAnCM;KAAMT,Y","sourcesContent":["export const CalculateBtn = () => {\n  const clicked = () => {\n    console.log('The button was ${clicked} ')\n  }\n\n  const checkValue = (value) => {\n\n    if (value == 0) \n    {\n    return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(value)) \n    {\n    return alert('Erro: o valor precisa ser um número');\n    } else if (typeof (value) === ('number'))\n    {\n    return alert('sucesso');\n    } else \n    {\n    alert('Erro inesperado.');\n    }\n  }\n\n  return (\n    <>\n      <button value=\"Calcular\" onClick={(e) => alert(this.value)}>Calcular</button> \n    <>    \n    </>\n      <form>\n        <label>Insira o custo:\n        <input type = \"text\" value = {cost}>\n        </input>\n        </label>\n      </form>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}