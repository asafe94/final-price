{"ast":null,"code":"var _jsxFileName = \"/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CalculateBtn = () => {\n  const clicked = () => {\n    console.log('The button was ${clicked} ');\n  };\n\n  const checkValue = value => {\n    if (value == 0) {\n      return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(value)) {\n      return alert('Erro: o valor precisa ser um número');\n    } else if (typeof value === 'number') {\n      return alert('sucesso');\n    } else {\n      alert('Erro inesperado.');\n    }\n  };\n\n  const clickHandle = () => {\n    return checkValue();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    onClick: this.ClickHandle,\n    type: \"submit\",\n    value: \"Calcular\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = CalculateBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateBtn\");","map":{"version":3,"sources":["/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx"],"names":["CalculateBtn","clicked","console","log","checkValue","value","alert","isNaN","clickHandle","ClickHandle"],"mappings":";;AAAA,OAAO,MAAMA,YAAY,GAAG,MAAM;AAChC,QAAMC,OAAO,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAE5B,QAAIA,KAAK,IAAI,CAAb,EACA;AACA,aAAOC,KAAK,CAAC,gDAAD,CAAZ;AACC,KAHD,MAGO,IAAIC,KAAK,CAACF,KAAD,CAAT,EACP;AACA,aAAOC,KAAK,CAAC,qCAAD,CAAZ;AACC,KAHM,MAGA,IAAI,OAAQD,KAAR,KAAoB,QAAxB,EACP;AACA,aAAOC,KAAK,CAAC,SAAD,CAAZ;AACC,KAHM,MAIP;AACAA,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACC;AACF,GAfD;;AAiBF,QAAME,WAAW,GAAG,MAAM;AACxB,WAAOJ,UAAU,EAAjB;AACD,GAFD;;AAKE,sBAEE;AAAO,IAAA,OAAO,EAAE,KAAKK,WAArB;AAEA,IAAA,IAAI,EAAC,QAFL;AAEc,IAAA,KAAK,EAAC;AAFpB;AAAA;AAAA;AAAA;AAAA,UAFF;AAMD,CAjCM;KAAMT,Y","sourcesContent":["export const CalculateBtn = () => {\n  const clicked = () => {\n    console.log('The button was ${clicked} ')\n  }\n\n  const checkValue = (value) => {\n\n    if (value == 0) \n    {\n    return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(value)) \n    {\n    return alert('Erro: o valor precisa ser um número');\n    } else if (typeof (value) === ('number'))\n    {\n    return alert('sucesso');\n    } else \n    {\n    alert('Erro inesperado.');\n    }\n  }\n\nconst clickHandle = () => {\n  return checkValue()\n}\n\n\n  return (\n    \n    <input onClick={this.ClickHandle} \n    \n    type=\"submit\" value=\"Calcular\"></input>\n  )\n}"]},"metadata":{},"sourceType":"module"}