{"ast":null,"code":"var _jsxFileName = \"/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CalculateBtn = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const FinalPrice = (cost, business) => {\n    cost = Number(cost);\n    const markup = {\n      CMRod: 2.5,\n      HVNRod: 2.5,\n      HVNBon: 2.3,\n      RPRod: 2.3\n    };\n\n    const HVN = () => {};\n\n    if (business === 'HVN') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pre\\xE7o de custo: R$\", cost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pre\\xE7o de venda Rodovi\\xE1ria: R$\", cost * markup.HVNRod]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pre\\xE7o de venda Bonsucesso: R$\", cost * markup.HVNBon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    } else if (business === 'CM') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pre\\xE7o de custo: R$\", cost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pre\\xE7o de venda Rodovi\\xE1ria: R$\", cost * markup.CMRod]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    } else if (business === 'RP') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pre\\xE7o de custo: R$\", cost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pre\\xE7o de venda Rodovi\\xE1ria: R$\", cost * markup.RPRod]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    } else {\n      alert(\"Error\");\n    }\n  };\n\n  const CheckValue = num => {\n    if (num == 0) {\n      return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(num)) {\n      return alert('Erro: o valor precisa ser um número');\n    } else {\n      FinalPrice(num, 'HVN');\n      console.log(num);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Custo\",\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"Calcular\",\n      onClick: () => CheckValue(inputValue),\n      children: \"Calcular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CalculateBtn, \"iEYviHCJXqr/rxvP+SpzgvyJcbo=\");\n\n_c = CalculateBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculateBtn\");","map":{"version":3,"sources":["/home/asafe/repos/final-price/src/components/CalculateBtn/index.jsx"],"names":["useState","CalculateBtn","inputValue","setInputValue","FinalPrice","cost","business","Number","markup","CMRod","HVNRod","HVNBon","RPRod","HVN","alert","CheckValue","num","isNaN","console","log","e","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMI,UAAU,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AACrCD,IAAAA,IAAI,GAAGE,MAAM,CAACF,IAAD,CAAb;AAEA,UAAMG,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAE,GADM;AAEbC,MAAAA,MAAM,EAAE,GAFK;AAGbC,MAAAA,MAAM,EAAE,GAHK;AAIbC,MAAAA,KAAK,EAAE;AAJM,KAAf;;AAOA,UAAMC,GAAG,GAAG,MAAM,CAEjB,CAFD;;AAKE,QAAIP,QAAQ,KAAK,KAAjB,EACA;AACE,0BACE;AAAA,gCACE;AAAA,8CAAsBD,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,4DAAiCA,IAAI,GAAGG,MAAM,CAACE,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,yDAAiCL,IAAI,GAAGG,MAAM,CAACG,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,sBADF;AAOD,KATD,MASO,IAAIL,QAAQ,KAAK,IAAjB,EACP;AACE,0BACE;AAAA,gCACE;AAAA,8CAAsBD,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,4DAAiCA,IAAI,GAAGG,MAAM,CAACC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AAMD,KARM,MAQA,IAAIH,QAAQ,KAAK,IAAjB,EACP;AACE,0BACE;AAAA,gCACE;AAAA,8CAAsBD,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,4DAAiCA,IAAI,GAAGG,MAAM,CAACI,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AAMD,KARM,MAQA;AACLE,MAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AAGJ,GA7CD;;AA+CA,QAAMC,UAAU,GAAIC,GAAD,IAAS;AAE1B,QAAIA,GAAG,IAAI,CAAX,EACA;AACA,aAAOF,KAAK,CAAC,gDAAD,CAAZ;AACC,KAHD,MAGO,IAAIG,KAAK,CAACD,GAAD,CAAT,EACP;AACA,aAAOF,KAAK,CAAC,qCAAD,CAAZ;AACC,KAHM,MAIP;AACAV,MAAAA,UAAU,CAACY,GAAD,EAAM,KAAN,CAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACC;AACF,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,QAAQ,EAAGI,CAAD,IAAOjB,aAAa,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzD;AAAA;AAAA;AAAA;AAAA,YADF,eAEA,qCAFA,eAIE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAE,MAAMP,UAAU,CAACb,UAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CAzEM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import {useState} from \"react\";\n\nexport const CalculateBtn = () => {\n  const [inputValue, setInputValue] = useState(\"\")\n\n  const FinalPrice = (cost, business) => {\n    cost = Number(cost)\n\n    const markup = {\n      CMRod: 2.5,\n      HVNRod: 2.5,\n      HVNBon: 2.3,\n      RPRod: 2.3\n    }\n\n    const HVN = () => {\n\n    }\n    \n    \n      if (business === 'HVN')\n      {\n        return(\n          <>\n            <p>Preço de custo: R${cost}</p>\n            <p>Preço de venda Rodoviária: R${cost * markup.HVNRod}</p>\n            <p>Preço de venda Bonsucesso: R${cost * markup.HVNBon}</p>\n          </>\n        )\n      } else if (business === 'CM')\n      {\n        return (\n          <>\n            <p>Preço de custo: R${cost}</p>\n            <p>Preço de venda Rodoviária: R${cost * markup.CMRod}</p>\n          </>\n        )\n      } else if (business === 'RP')\n      {\n        return (\n          <>\n            <p>Preço de custo: R${cost}</p>\n            <p>Preço de venda Rodoviária: R${cost * markup.RPRod}</p>\n          </>\n        )\n      } else {\n        alert(\"Error\")\n      }\n\n    \n  }\n  \n  const CheckValue = (num) => {\n\n    if (num == 0) \n    {\n    return alert('Erro: o valor de custo não pode ser igual a 0.');\n    } else if (isNaN(num)) \n    {\n    return alert('Erro: o valor precisa ser um número');\n    } else\n    {\n    FinalPrice(num, 'HVN')\n    console.log(num)\n    }\n  }\n\n  return (\n    <>\n      <input placeholder=\"Custo\" onChange={(e) => setInputValue(e.target.value)}/>\n    <>    \n    </>\n      <button value=\"Calcular\" onClick={() => CheckValue(inputValue)}>Calcular</button> \n    </>\n  )\n};"]},"metadata":{},"sourceType":"module"}